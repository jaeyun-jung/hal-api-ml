CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(hal-api-ml)

option(ENABLE_HALTESTS "Enable HAL tests" ON)

SET(PREFIX ${CMAKE_INSTALL_PREFIX})
SET(EXEC_PREFIX "${CMAKE_INSTALL_PREFIX}/bin")
SET(INCLUDEDIR "${CMAKE_INSTALL_PREFIX}/include")
SET(LIBDIR ${CMAKE_LIBDIR_PREFIX})

IF (NOT DEFINED VERSION)
    SET(VERSION 0.1.0)
ENDIF()

STRING(REPLACE "." ";" VERSION_LIST ${VERSION})
LIST(GET VERSION_LIST 0 VERSION_MAJOR)
LIST(GET VERSION_LIST 1 VERSION_MINOR)
LIST(GET VERSION_LIST 2 VERSION_MICRO)

SET(VERSION_FLAGS "-DVERSION='\"${VERSION}\"' -DVERSION_MAJOR=${VERSION_MAJOR} -DVERSION_MINOR=${VERSION_MINOR} -DVERSION_MICRO=${VERSION_MICRO}")

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include)

SET(PKG_MODULES
	dlog
	glib-2.0
	hal-api-common
)

INCLUDE(FindPkgConfig)
pkg_check_modules(pkgs REQUIRED ${PKG_MODULES})

FOREACH(flag ${pkgs_CFLAGS})
	SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} ${flag}")
ENDFOREACH(flag)

# SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} -g -fno-omit-frame-pointer -finstrument-functions")
# SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} -fPIC -Wall -Wextra -Wno-array-bounds -Wno-empty-body -Wno-ignored-qualifiers -Wno-unused-parameter -Wshadow -Wwrite-strings -Wswitch-default -Wno-unused-but-set-parameter -Wno-unused-but-set-variable")

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${EXTRA_CFLAGS} ${VERSION_FLAGS} -lrt")

SET(SRCS
	src/hal-api-ml.c
)

ADD_LIBRARY(${PROJECT_NAME} SHARED ${SRCS})

# TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${pkgs_LDFLAGS} -Wl,--as-needed -Wl,--rpath=${LIBDIR}/hal)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${pkgs_LDFLAGS})
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES SOVERSION ${VERSION_MAJOR})
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES VERSION ${VERSION})

CONFIGURE_FILE(${PROJECT_NAME}.pc.in ${PROJECT_NAME}.pc @ONLY)

INSTALL(TARGETS	${PROJECT_NAME} DESTINATION ${LIBDIR}/hal)

INSTALL(DIRECTORY include/ DESTINATION include/hal
		FILES_MATCHING
		PATTERN "include/*.h"
		PATTERN "include/*.hh")

INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/${PROJECT_NAME}.pc DESTINATION ${LIBDIR}/pkgconfig)

IF(ENABLE_HALTESTS)
SET(HALTESTS_SRCS
	tests/ml-haltests.cc
)

pkg_check_modules(ml_hal_tests_dep_pkgs REQUIRED
	gtest
)

ADD_EXECUTABLE(ml-haltests ${HALTESTS_SRCS})
TARGET_LINK_LIBRARIES(ml-haltests
	${PROJECT_NAME}
	${pkgs_LDFLAGS}
	${ml_hal_tests_dep_pkgs_LDFLAGS}
)

INSTALL(TARGETS ml-haltests DESTINATION /usr/bin/hal)
ENDIF()
